{
  "projects": [
    {
      "id": "project-id-1",
      "title": "Design-system (MONO-REPO)",
      "period": "2024.12.23 ~ 진행중",
      "team": "개인 프로젝트",
      "thumbnailUrl": "https://private-user-images.githubusercontent.com/69448900/403294030-ed129376-c615-4d1c-a5fe-38c44cb72003.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgyNDcyNTgsIm5iZiI6MTczODI0Njk1OCwicGF0aCI6Ii82OTQ0ODkwMC80MDMyOTQwMzAtZWQxMjkzNzYtYzYxNS00ZDFjLWE1ZmUtMzhjNDRjYjcyMDAzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMzAlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTMwVDE0MjIzOFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTZjODZlZDYxYWFlNzEyZGI3MDRlNjhlNjA0MGZhNDg0ODk2NjFiNzBlZWEyZDhkYjc1NDNhZjYxMGQ1Mjk4ZTMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.kxXNaOcdJOWBNtqLCr9mdp_eYKz-k_3tmPDgygiCEBM",
      "stacks": [
        {"id": "stack-1", "title": "Vite"},
        {"id": "stack-2", "title": "React"},
        {"id": "stack-3", "title": "TypeScript"},
        {"id": "stack-4", "title": "TailwindCSS"},
        {"id": "stack-5", "title": "Storybook"},
        {"id": "stack-6", "title": "PNPM"}
      ],
      "highlights": [
        {"id":  "highlight-1", "title": "모노레포 기반 커스텀 패키지"},
        {"id": "highlight-3", "title": "Atomic UI 관리에서의 불편함을 해소하고자 개발"},
        {"id": "highlight-2", "title": "Storybook을 활용해 UI 테스트 및 문서화"},
        {"id": "highlight-4", "title": "스타일링 방식을 SCSS에서 TailwindCSS로 전환하여 빌드 속도를 개선"}
      ],
      "troubleShooting": [
        {
          "id": "trouble-1",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        },
        {
          "id": "trouble-2",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        }
      ],
      "learnings": [
        { "id": "learning-1", "title": "주제", "contents": [ "Figma Dev 모드를 사용하여 color token과 text token 등을 손쉽게 추출할 수 있었습니다. TailwindCSS Config 파일과 함께 사용해, 디자인 가이드 구현 시간을 3일에서 2시간으로 대폭 단축할 수 있었습니다. 기존에 SCSS로 작업할 때는 색상 토큰 추출 및 테마 구현에 많은 시간이 소요되었지만, Figma와 TailwindCSS의 강력한 연동 덕분에 효율적으로 작업할 수 있었습니다.",
        "이 경험을 통해, 세부 작업은 AI와 도구를 적극 활용함으로써 더 재미있고 창의적인 작업(예: 컴포넌트 구현)에 시간을 할애할 수 있다는 점을 깨달았습니다. 앞으로는 AI와 자동화 도구를 활용해 반복 작업을 최소화하고, 창의적이고 전략적인 작업에 집중할 계획입니다."] },
        { "id": "learning-2", "title": "주제", "contents": [ "Figma Dev 모드를 사용하여 color token과 text token 등을 손쉽게 추출할 수 있었습니다. TailwindCSS Config 파일과 함께 사용해, 디자인 가이드 구현 시간을 3일에서 2시간으로 대폭 단축할 수 있었습니다. 기존에 SCSS로 작업할 때는 색상 토큰 추출 및 테마 구현에 많은 시간이 소요되었지만, Figma와 TailwindCSS의 강력한 연동 덕분에 효율적으로 작업할 수 있었습니다.",
        "이 경험을 통해, 세부 작업은 AI와 도구를 적극 활용함으로써 더 재미있고 창의적인 작업(예: 컴포넌트 구현)에 시간을 할애할 수 있다는 점을 깨달았습니다. 앞으로는 AI와 자동화 도구를 활용해 반복 작업을 최소화하고, 창의적이고 전략적인 작업에 집중할 계획입니다."] }
      ],
      "links": {
        "blog": [
          {
            "id": "blog-link-1",
            "title": "모노레포 PNPM으로 구성하기 (Feat. NextJS, Vite, React, TypeScript)",
            "content": "https://velog.io/@inhye94/%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC-PNPM%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0-Feat.-NextJS-Vite-React-TypeScript"
          },
          {
            "id": "blog-link-2",
            "title": "모노레포 PNPM으로 구성하기 - TailwindCSS",
            "content": "https://velog.io/@inhye94/%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC-PNPM%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0-TailwindCSS"
          },
          {
            "id": "blog-link-3",
            "title": "모노레포 PNPM으로 구성하기 - TypeScript",
            "content": "https://velog.io/@inhye94/%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC-PNPM%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0-TypeScript"
          }
        ],
        "github": "https://github.com/inhye94/pnpm-next-monorepo/tree/main/packages/design-system",
        "deploy": "https://67875cd86620d78844d43146-dzvstjnmho.chromatic.com/?path=/docs/components-textfield--docs"
      }
    },
    {
      "id": "project-id-2",
      "title": "원티드 사전 과제 To Do Lisg",
      "period": "2024.11.14 ~ 2024.12.21",
      "team": "개인 프로젝트",
      "thumbnailUrl": "https://private-user-images.githubusercontent.com/69448900/397971949-95fc1633-f71a-4a20-9454-a2bb24609a6a.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzcwMzQyOTAsIm5iZiI6MTczNzAzMzk5MCwicGF0aCI6Ii82OTQ0ODkwMC8zOTc5NzE5NDktOTVmYzE2MzMtZjcxYS00YTIwLTk0NTQtYTJiYjI0NjA5YTZhLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMTYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTE2VDEzMjYzMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIzNzllYjkxOTU1MjFkNjdjMTBlNTFjMGIxNWQzNmMzOTMyNTk3MzIyOTMxY2RmZWZmZDJlZTIzNjNlODExOWEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.YqJmMUaTkCOcO1GnaIbWXUOakszOpCbkjQ0A2pYHjCA",
      "stacks": [
        {"id": "stack-1", "title": "Vite"},
        {"id": "stack-2", "title": "React"},
        {"id": "stack-3", "title": "TypeScript"},
        {"id": "stack-4", "title": "TailwindCSS"},
        {"id": "stack-5", "title": "Storybook"},
        {"id": "stack-6", "title": "PNPM"}
      ],
      "highlights": [
        {"id":  "highlight-1", "title": "모노레포 기반 커스텀 패키지"},
        {"id": "highlight-3", "title": "Atomic UI를 패키지로 공유하여, 작업자마다 달랐던 UI 구현방식을 하나로 통합하고 스타일 일관성을 확보"},
        {"id": "highlight-2", "title": "Storybook을 활용해 UI 테스트 및 문서화"},
        {"id": "highlight-4", "title": "스타일링 방식을 SCSS에서 TailwindCSS로 전환하여 빌드 속도를 개선"}
      ],
      "troubleShooting": [
        {
          "id": "trouble-1",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        },
        {
          "id": "trouble-2",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        }
      ],
      "learnings": [
        { "id": "learning-1", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] },
        { "id": "learning-2", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] },
        { "id": "learning-3", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] }
      ],
      "links": {
        "blog": [{ "id": "link-blog-1", "title": "블로그 주제", "content": "블로그 링크" }],
        "github": "깃허브 링크",
        "deploy": "배포 링크"
      }
    },
    {
      "id": "project-id-3",
      "title": "프로젝트명",
      "period": "언제부터 ~ 언제까지",
      "team": "개인 프로젝트 / 팀 프로젝트 (몇 명)",
      "thumbnailUrl": "이미지 주소",
      "stacks": [
        {"id": "stack-1", "title": "Vite"},
        {"id": "stack-2", "title": "React"},
        {"id": "stack-3", "title": "TypeScript"},
        {"id": "stack-4", "title": "TailwindCSS"},
        {"id": "stack-5", "title": "Storybook"},
        {"id": "stack-6", "title": "PNPM"}
      ],
      "highlights": [
        {"id":  "highlight-1", "title": "모노레포 기반 커스텀 패키지"},
        {"id": "highlight-3", "title": "Atomic UI를 패키지로 공유하여, 작업자마다 달랐던 UI 구현방식을 하나로 통합하고 스타일 일관성을 확보"},
        {"id": "highlight-2", "title": "Storybook을 활용해 UI 테스트 및 문서화"},
        {"id": "highlight-4", "title": "스타일링 방식을 SCSS에서 TailwindCSS로 전환하여 빌드 속도를 개선"}
      ],
      "troubleShooting": [
        {
          "id": "trouble-1",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        },
        {
          "id": "trouble-2",
          "title": "무슨무슨 주제",
          "contents": ["어떤어떤 방법", "다른 방법2", "다른 방법3"]
        }
      ],
      "learnings": [
        { "id": "learning-1", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] },
        { "id": "learning-2", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] },
        { "id": "learning-3", "title": "주제", "contents": ["배운점1", "배운점2", "배운점3"] }
      ],
      "links": {
        "blog": [{ "id": "link-blog-1",  "title": "블로그 주제", "content": "블로그 링크" }],
        "github": "깃허브 링크",
        "deploy": "배포 링크"
      }
    }
  ],
  "careers": [
    {
      "id": "career-id-1",
      "corp": "디노마드",
      "summary": "백오피스 개발 (PHP 기반)",
      "roles": [
        "서비스 초기 기획 단계부터 론칭까지 전 과정 참여",
        "사내에 분산된 데이터를 통합하고 생산성을 극대화하는 개인 맞춤형 추천 기능 구현",
        "RESTful API 연동하여 사용자 상호작용 중심의 UI 설계 및 구현",
        "기획자/디자이너와 협업을 통한 지속적 UI/UX 개선",
        "프론트엔드 역할 분담 및 일정 조율 경험"
      ]
    }
  ],
  "skills": [
    {
      "id": "skill-react",
      "title": "react",
      "content": "UI의 재사용성을 극대화하기 위해 컴포넌트 단위로 코드를 작성하며, Custom Hook을 활용해 공용 로직을 캡슐화합니다. 또한, Zustand와 Redux 같은 전역 상태 관리 라이브러리를 사용해 복잡한 상태를 효율적으로 관리하며, SPA 개발에 능숙합니다.",
      "experience": [
        {
          "id": "exp-react-1",
          "content": "pnpm을 이용해 모노레포를 구현, 빌드 및 배포 경험이 있습니다."
        },
        {
          "id": "exp-react-2",
          "content": "Zustand를 이용해 전역 상태를 최적화하고, Context를 주입한 Toast를 제작하는 등 상태관리 경험이 있습니다."
        },
        {
          "id": "exp-react-3",
          "content": "Lighthouse를 이용해 페이지 성능 측정, 컴포넌트 성능 개선한 경험이 있습니다."
        }
      ]
    },
    {
      "id": "skill-js",
      "title": "JavaScript",
      "content": "구조분해할당, spread 연산자 등 ES6+ 문법에 능숙하며, 주요 내장 메서드와 모듈 시스템을 이해하고 활용합니다. Promise, async/await 등 비동기 프로그래밍의 개념과 JavaScript의 동작 원리를 깊이 이해하고 있습니다.",
      "experience": [
        {
          "id": "exp-js-0",
          "content": "API를 연동해 사용자와의 상호작용이 높은 UI를 구현한 경험이 있습니다."
        },
        {
          "id": "exp-js-1",
          "content": "typescript를 사용할 수 있습니다."
        },
        {
          "id": "exp-js-2",
          "content": "Storybook 작성, 빌드 및 배포 경험이 있습니다."
        },
        {
          "id": "exp-js-3",
          "content": "husky, commitlint, eslint, prettier 도입으로 코드 일관성 및 품질을 향상합니다."
        }
      ]
    },
    {
      "id": "skill-htmlcss",
      "title": "HTML/CSS",
      "content": "Semantic 태그를 활용하여 문서 구조의 명확성과 가독성을 개선하며, 웹 표준 준수를 통해 접근성과 SEO에 최적화된 마크업을 작성합니다.\n 효율적인 선택자를 사용하며, Flexbox와 Grid, Position 속성을 활용해 복잡한 레이아웃을 손쉽게 구성할 수 있습니다. 또한, 미디어 쿼리와 CSS 변수 등을 활용하여 다양한 디바이스 환경에서도 일관된 반응형 디자인을 구현할 수 있습니다.",
      "experience": [
        {
          "id": "exp-htmlcss-1",
          "content": "Radix를 사용해, 웹 접근성을 보완한 디자인 시스템을 구현한 경험이 있습니다"
        },
        {
          "id": "exp-htmlcss-2",
          "content": "TailwindCSS, Emotion, SCSS를 활용할 수 있습니다."
        },
        {
          "id": "exp-htmlcss-3",
          "content": "keyframe을 활용한 애니메이션 기법을 활용할 수 있습니다."
        }
      ]
    }
  ],
  "stacks": [
    { "id": "stack-react", "content": "React" },
    { "id": "stack-next", "content": "NextJS" },
    { "id": "stack-ts", "content": "TypeScript" },
    { "id": "stack-js", "content": "JavaScript" },
    { "id": "stack-storybook", "content": "Storybook" },
    { "id": "stack-tw", "content": "TailwindCSS" },
    { "id": "stack-scss", "content": "SCSS" },
    { "id": "stack-emotion", "content": "Emotion" }
  ]
}
